
SmartHomeProject_ABORAYA.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000041c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000470  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000470  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004a0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000090  00000000  00000000  000004dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000acd  00000000  00000000  0000056c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000685  00000000  00000000  00001039  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000006e5  00000000  00000000  000016be  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000dc  00000000  00000000  00001da4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000043b  00000000  00000000  00001e80  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000576  00000000  00000000  000022bb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  00002831  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e1       	ldi	r30, 0x1C	; 28
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 a1 01 	call	0x342	; 0x342 <main>
  7a:	0c 94 0c 02 	jmp	0x418	; 0x418 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_u8SetPinDirection>:
	{
		Local_u8ErrorState = NOK ;
	}
	
	return Local_u8ErrorState ;
}
  82:	84 30       	cpi	r24, 0x04	; 4
  84:	08 f0       	brcs	.+2      	; 0x88 <DIO_u8SetPinDirection+0x6>
  86:	7b c0       	rjmp	.+246    	; 0x17e <DIO_u8SetPinDirection+0xfc>
  88:	68 30       	cpi	r22, 0x08	; 8
  8a:	08 f0       	brcs	.+2      	; 0x8e <DIO_u8SetPinDirection+0xc>
  8c:	7a c0       	rjmp	.+244    	; 0x182 <DIO_u8SetPinDirection+0x100>
  8e:	41 11       	cpse	r20, r1
  90:	3c c0       	rjmp	.+120    	; 0x10a <DIO_u8SetPinDirection+0x88>
  92:	81 30       	cpi	r24, 0x01	; 1
  94:	99 f0       	breq	.+38     	; 0xbc <DIO_u8SetPinDirection+0x3a>
  96:	28 f0       	brcs	.+10     	; 0xa2 <DIO_u8SetPinDirection+0x20>
  98:	82 30       	cpi	r24, 0x02	; 2
  9a:	e9 f0       	breq	.+58     	; 0xd6 <DIO_u8SetPinDirection+0x54>
  9c:	83 30       	cpi	r24, 0x03	; 3
  9e:	41 f1       	breq	.+80     	; 0xf0 <DIO_u8SetPinDirection+0x6e>
  a0:	72 c0       	rjmp	.+228    	; 0x186 <DIO_u8SetPinDirection+0x104>
  a2:	2a b3       	in	r18, 0x1a	; 26
  a4:	81 e0       	ldi	r24, 0x01	; 1
  a6:	90 e0       	ldi	r25, 0x00	; 0
  a8:	02 c0       	rjmp	.+4      	; 0xae <DIO_u8SetPinDirection+0x2c>
  aa:	88 0f       	add	r24, r24
  ac:	99 1f       	adc	r25, r25
  ae:	6a 95       	dec	r22
  b0:	e2 f7       	brpl	.-8      	; 0xaa <DIO_u8SetPinDirection+0x28>
  b2:	80 95       	com	r24
  b4:	82 23       	and	r24, r18
  b6:	8a bb       	out	0x1a, r24	; 26
  b8:	80 e0       	ldi	r24, 0x00	; 0
  ba:	08 95       	ret
  bc:	27 b3       	in	r18, 0x17	; 23
  be:	81 e0       	ldi	r24, 0x01	; 1
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <DIO_u8SetPinDirection+0x46>
  c4:	88 0f       	add	r24, r24
  c6:	99 1f       	adc	r25, r25
  c8:	6a 95       	dec	r22
  ca:	e2 f7       	brpl	.-8      	; 0xc4 <DIO_u8SetPinDirection+0x42>
  cc:	80 95       	com	r24
  ce:	82 23       	and	r24, r18
  d0:	87 bb       	out	0x17, r24	; 23
  d2:	80 e0       	ldi	r24, 0x00	; 0
  d4:	08 95       	ret
  d6:	24 b3       	in	r18, 0x14	; 20
  d8:	81 e0       	ldi	r24, 0x01	; 1
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	02 c0       	rjmp	.+4      	; 0xe2 <DIO_u8SetPinDirection+0x60>
  de:	88 0f       	add	r24, r24
  e0:	99 1f       	adc	r25, r25
  e2:	6a 95       	dec	r22
  e4:	e2 f7       	brpl	.-8      	; 0xde <DIO_u8SetPinDirection+0x5c>
  e6:	80 95       	com	r24
  e8:	82 23       	and	r24, r18
  ea:	84 bb       	out	0x14, r24	; 20
  ec:	80 e0       	ldi	r24, 0x00	; 0
  ee:	08 95       	ret
  f0:	21 b3       	in	r18, 0x11	; 17
  f2:	81 e0       	ldi	r24, 0x01	; 1
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	02 c0       	rjmp	.+4      	; 0xfc <DIO_u8SetPinDirection+0x7a>
  f8:	88 0f       	add	r24, r24
  fa:	99 1f       	adc	r25, r25
  fc:	6a 95       	dec	r22
  fe:	e2 f7       	brpl	.-8      	; 0xf8 <DIO_u8SetPinDirection+0x76>
 100:	80 95       	com	r24
 102:	82 23       	and	r24, r18
 104:	81 bb       	out	0x11, r24	; 17
 106:	80 e0       	ldi	r24, 0x00	; 0
 108:	08 95       	ret
 10a:	41 30       	cpi	r20, 0x01	; 1
 10c:	f1 f5       	brne	.+124    	; 0x18a <DIO_u8SetPinDirection+0x108>
 10e:	81 30       	cpi	r24, 0x01	; 1
 110:	91 f0       	breq	.+36     	; 0x136 <DIO_u8SetPinDirection+0xb4>
 112:	28 f0       	brcs	.+10     	; 0x11e <DIO_u8SetPinDirection+0x9c>
 114:	82 30       	cpi	r24, 0x02	; 2
 116:	d9 f0       	breq	.+54     	; 0x14e <DIO_u8SetPinDirection+0xcc>
 118:	83 30       	cpi	r24, 0x03	; 3
 11a:	29 f1       	breq	.+74     	; 0x166 <DIO_u8SetPinDirection+0xe4>
 11c:	38 c0       	rjmp	.+112    	; 0x18e <DIO_u8SetPinDirection+0x10c>
 11e:	2a b3       	in	r18, 0x1a	; 26
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	02 c0       	rjmp	.+4      	; 0x12a <DIO_u8SetPinDirection+0xa8>
 126:	88 0f       	add	r24, r24
 128:	99 1f       	adc	r25, r25
 12a:	6a 95       	dec	r22
 12c:	e2 f7       	brpl	.-8      	; 0x126 <DIO_u8SetPinDirection+0xa4>
 12e:	82 2b       	or	r24, r18
 130:	8a bb       	out	0x1a, r24	; 26
 132:	80 e0       	ldi	r24, 0x00	; 0
 134:	08 95       	ret
 136:	27 b3       	in	r18, 0x17	; 23
 138:	81 e0       	ldi	r24, 0x01	; 1
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	02 c0       	rjmp	.+4      	; 0x142 <DIO_u8SetPinDirection+0xc0>
 13e:	88 0f       	add	r24, r24
 140:	99 1f       	adc	r25, r25
 142:	6a 95       	dec	r22
 144:	e2 f7       	brpl	.-8      	; 0x13e <DIO_u8SetPinDirection+0xbc>
 146:	82 2b       	or	r24, r18
 148:	87 bb       	out	0x17, r24	; 23
 14a:	80 e0       	ldi	r24, 0x00	; 0
 14c:	08 95       	ret
 14e:	24 b3       	in	r18, 0x14	; 20
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	02 c0       	rjmp	.+4      	; 0x15a <DIO_u8SetPinDirection+0xd8>
 156:	88 0f       	add	r24, r24
 158:	99 1f       	adc	r25, r25
 15a:	6a 95       	dec	r22
 15c:	e2 f7       	brpl	.-8      	; 0x156 <DIO_u8SetPinDirection+0xd4>
 15e:	82 2b       	or	r24, r18
 160:	84 bb       	out	0x14, r24	; 20
 162:	80 e0       	ldi	r24, 0x00	; 0
 164:	08 95       	ret
 166:	21 b3       	in	r18, 0x11	; 17
 168:	81 e0       	ldi	r24, 0x01	; 1
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	02 c0       	rjmp	.+4      	; 0x172 <DIO_u8SetPinDirection+0xf0>
 16e:	88 0f       	add	r24, r24
 170:	99 1f       	adc	r25, r25
 172:	6a 95       	dec	r22
 174:	e2 f7       	brpl	.-8      	; 0x16e <DIO_u8SetPinDirection+0xec>
 176:	82 2b       	or	r24, r18
 178:	81 bb       	out	0x11, r24	; 17
 17a:	80 e0       	ldi	r24, 0x00	; 0
 17c:	08 95       	ret
 17e:	81 e0       	ldi	r24, 0x01	; 1
 180:	08 95       	ret
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	08 95       	ret
 186:	81 e0       	ldi	r24, 0x01	; 1
 188:	08 95       	ret
 18a:	81 e0       	ldi	r24, 0x01	; 1
 18c:	08 95       	ret
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	08 95       	ret

00000192 <DIO_u8SetPinVa1ue>:
 192:	84 30       	cpi	r24, 0x04	; 4
 194:	08 f0       	brcs	.+2      	; 0x198 <DIO_u8SetPinVa1ue+0x6>
 196:	7b c0       	rjmp	.+246    	; 0x28e <DIO_u8SetPinVa1ue+0xfc>
 198:	68 30       	cpi	r22, 0x08	; 8
 19a:	08 f0       	brcs	.+2      	; 0x19e <DIO_u8SetPinVa1ue+0xc>
 19c:	7a c0       	rjmp	.+244    	; 0x292 <DIO_u8SetPinVa1ue+0x100>
 19e:	41 30       	cpi	r20, 0x01	; 1
 1a0:	c1 f5       	brne	.+112    	; 0x212 <DIO_u8SetPinVa1ue+0x80>
 1a2:	81 30       	cpi	r24, 0x01	; 1
 1a4:	91 f0       	breq	.+36     	; 0x1ca <DIO_u8SetPinVa1ue+0x38>
 1a6:	28 f0       	brcs	.+10     	; 0x1b2 <DIO_u8SetPinVa1ue+0x20>
 1a8:	82 30       	cpi	r24, 0x02	; 2
 1aa:	d9 f0       	breq	.+54     	; 0x1e2 <DIO_u8SetPinVa1ue+0x50>
 1ac:	83 30       	cpi	r24, 0x03	; 3
 1ae:	29 f1       	breq	.+74     	; 0x1fa <DIO_u8SetPinVa1ue+0x68>
 1b0:	72 c0       	rjmp	.+228    	; 0x296 <DIO_u8SetPinVa1ue+0x104>
 1b2:	2b b3       	in	r18, 0x1b	; 27
 1b4:	81 e0       	ldi	r24, 0x01	; 1
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	02 c0       	rjmp	.+4      	; 0x1be <DIO_u8SetPinVa1ue+0x2c>
 1ba:	88 0f       	add	r24, r24
 1bc:	99 1f       	adc	r25, r25
 1be:	6a 95       	dec	r22
 1c0:	e2 f7       	brpl	.-8      	; 0x1ba <DIO_u8SetPinVa1ue+0x28>
 1c2:	82 2b       	or	r24, r18
 1c4:	8b bb       	out	0x1b, r24	; 27
 1c6:	80 e0       	ldi	r24, 0x00	; 0
 1c8:	08 95       	ret
 1ca:	28 b3       	in	r18, 0x18	; 24
 1cc:	81 e0       	ldi	r24, 0x01	; 1
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	02 c0       	rjmp	.+4      	; 0x1d6 <DIO_u8SetPinVa1ue+0x44>
 1d2:	88 0f       	add	r24, r24
 1d4:	99 1f       	adc	r25, r25
 1d6:	6a 95       	dec	r22
 1d8:	e2 f7       	brpl	.-8      	; 0x1d2 <DIO_u8SetPinVa1ue+0x40>
 1da:	82 2b       	or	r24, r18
 1dc:	88 bb       	out	0x18, r24	; 24
 1de:	80 e0       	ldi	r24, 0x00	; 0
 1e0:	08 95       	ret
 1e2:	25 b3       	in	r18, 0x15	; 21
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	02 c0       	rjmp	.+4      	; 0x1ee <DIO_u8SetPinVa1ue+0x5c>
 1ea:	88 0f       	add	r24, r24
 1ec:	99 1f       	adc	r25, r25
 1ee:	6a 95       	dec	r22
 1f0:	e2 f7       	brpl	.-8      	; 0x1ea <DIO_u8SetPinVa1ue+0x58>
 1f2:	82 2b       	or	r24, r18
 1f4:	85 bb       	out	0x15, r24	; 21
 1f6:	80 e0       	ldi	r24, 0x00	; 0
 1f8:	08 95       	ret
 1fa:	22 b3       	in	r18, 0x12	; 18
 1fc:	81 e0       	ldi	r24, 0x01	; 1
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	02 c0       	rjmp	.+4      	; 0x206 <DIO_u8SetPinVa1ue+0x74>
 202:	88 0f       	add	r24, r24
 204:	99 1f       	adc	r25, r25
 206:	6a 95       	dec	r22
 208:	e2 f7       	brpl	.-8      	; 0x202 <DIO_u8SetPinVa1ue+0x70>
 20a:	82 2b       	or	r24, r18
 20c:	82 bb       	out	0x12, r24	; 18
 20e:	80 e0       	ldi	r24, 0x00	; 0
 210:	08 95       	ret
 212:	41 11       	cpse	r20, r1
 214:	42 c0       	rjmp	.+132    	; 0x29a <DIO_u8SetPinVa1ue+0x108>
 216:	81 30       	cpi	r24, 0x01	; 1
 218:	99 f0       	breq	.+38     	; 0x240 <DIO_u8SetPinVa1ue+0xae>
 21a:	28 f0       	brcs	.+10     	; 0x226 <DIO_u8SetPinVa1ue+0x94>
 21c:	82 30       	cpi	r24, 0x02	; 2
 21e:	e9 f0       	breq	.+58     	; 0x25a <DIO_u8SetPinVa1ue+0xc8>
 220:	83 30       	cpi	r24, 0x03	; 3
 222:	41 f1       	breq	.+80     	; 0x274 <DIO_u8SetPinVa1ue+0xe2>
 224:	3c c0       	rjmp	.+120    	; 0x29e <DIO_u8SetPinVa1ue+0x10c>
 226:	2b b3       	in	r18, 0x1b	; 27
 228:	81 e0       	ldi	r24, 0x01	; 1
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	02 c0       	rjmp	.+4      	; 0x232 <DIO_u8SetPinVa1ue+0xa0>
 22e:	88 0f       	add	r24, r24
 230:	99 1f       	adc	r25, r25
 232:	6a 95       	dec	r22
 234:	e2 f7       	brpl	.-8      	; 0x22e <DIO_u8SetPinVa1ue+0x9c>
 236:	80 95       	com	r24
 238:	82 23       	and	r24, r18
 23a:	8b bb       	out	0x1b, r24	; 27
 23c:	80 e0       	ldi	r24, 0x00	; 0
 23e:	08 95       	ret
 240:	28 b3       	in	r18, 0x18	; 24
 242:	81 e0       	ldi	r24, 0x01	; 1
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	02 c0       	rjmp	.+4      	; 0x24c <DIO_u8SetPinVa1ue+0xba>
 248:	88 0f       	add	r24, r24
 24a:	99 1f       	adc	r25, r25
 24c:	6a 95       	dec	r22
 24e:	e2 f7       	brpl	.-8      	; 0x248 <DIO_u8SetPinVa1ue+0xb6>
 250:	80 95       	com	r24
 252:	82 23       	and	r24, r18
 254:	88 bb       	out	0x18, r24	; 24
 256:	80 e0       	ldi	r24, 0x00	; 0
 258:	08 95       	ret
 25a:	25 b3       	in	r18, 0x15	; 21
 25c:	81 e0       	ldi	r24, 0x01	; 1
 25e:	90 e0       	ldi	r25, 0x00	; 0
 260:	02 c0       	rjmp	.+4      	; 0x266 <DIO_u8SetPinVa1ue+0xd4>
 262:	88 0f       	add	r24, r24
 264:	99 1f       	adc	r25, r25
 266:	6a 95       	dec	r22
 268:	e2 f7       	brpl	.-8      	; 0x262 <DIO_u8SetPinVa1ue+0xd0>
 26a:	80 95       	com	r24
 26c:	82 23       	and	r24, r18
 26e:	85 bb       	out	0x15, r24	; 21
 270:	80 e0       	ldi	r24, 0x00	; 0
 272:	08 95       	ret
 274:	22 b3       	in	r18, 0x12	; 18
 276:	81 e0       	ldi	r24, 0x01	; 1
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	02 c0       	rjmp	.+4      	; 0x280 <DIO_u8SetPinVa1ue+0xee>
 27c:	88 0f       	add	r24, r24
 27e:	99 1f       	adc	r25, r25
 280:	6a 95       	dec	r22
 282:	e2 f7       	brpl	.-8      	; 0x27c <DIO_u8SetPinVa1ue+0xea>
 284:	80 95       	com	r24
 286:	82 23       	and	r24, r18
 288:	82 bb       	out	0x12, r24	; 18
 28a:	80 e0       	ldi	r24, 0x00	; 0
 28c:	08 95       	ret
 28e:	81 e0       	ldi	r24, 0x01	; 1
 290:	08 95       	ret
 292:	81 e0       	ldi	r24, 0x01	; 1
 294:	08 95       	ret
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	08 95       	ret
 29a:	81 e0       	ldi	r24, 0x01	; 1
 29c:	08 95       	ret
 29e:	81 e0       	ldi	r24, 0x01	; 1
 2a0:	08 95       	ret

000002a2 <DIO_u8GetPinVaIue>:

u8 DIO_u8GetPinVaIue (u8 Copy_u8Port,u8 Copy_u8Pin, u8 *Copy_pu8Value )
{
	u8 Local_u8ErrorState = OK ;
	
	if( DIO_u8PORTD >= Copy_u8Port )
 2a2:	84 30       	cpi	r24, 0x04	; 4
 2a4:	60 f5       	brcc	.+88     	; 0x2fe <DIO_u8GetPinVaIue+0x5c>
	{
		if( DIO_u8PIN7 >= Copy_u8Pin )
 2a6:	68 30       	cpi	r22, 0x08	; 8
 2a8:	60 f5       	brcc	.+88     	; 0x302 <DIO_u8GetPinVaIue+0x60>
		{
			switch ( Copy_u8Port )
 2aa:	81 30       	cpi	r24, 0x01	; 1
 2ac:	81 f0       	breq	.+32     	; 0x2ce <DIO_u8GetPinVaIue+0x2c>
 2ae:	18 f0       	brcs	.+6      	; 0x2b6 <DIO_u8GetPinVaIue+0x14>
 2b0:	82 30       	cpi	r24, 0x02	; 2
 2b2:	c9 f0       	breq	.+50     	; 0x2e6 <DIO_u8GetPinVaIue+0x44>
 2b4:	28 c0       	rjmp	.+80     	; 0x306 <DIO_u8GetPinVaIue+0x64>
			{
				case DIO_u8PORTA : *(Copy_pu8Value) = GET_BIT( DIO_PINA_REG , Copy_u8Pin ); break;
 2b6:	89 b3       	in	r24, 0x19	; 25
 2b8:	90 e0       	ldi	r25, 0x00	; 0
 2ba:	02 c0       	rjmp	.+4      	; 0x2c0 <DIO_u8GetPinVaIue+0x1e>
 2bc:	95 95       	asr	r25
 2be:	87 95       	ror	r24
 2c0:	6a 95       	dec	r22
 2c2:	e2 f7       	brpl	.-8      	; 0x2bc <DIO_u8GetPinVaIue+0x1a>
 2c4:	81 70       	andi	r24, 0x01	; 1
 2c6:	fa 01       	movw	r30, r20
 2c8:	80 83       	st	Z, r24
	return Local_u8ErrorState ;
}

u8 DIO_u8GetPinVaIue (u8 Copy_u8Port,u8 Copy_u8Pin, u8 *Copy_pu8Value )
{
	u8 Local_u8ErrorState = OK ;
 2ca:	80 e0       	ldi	r24, 0x00	; 0
	{
		if( DIO_u8PIN7 >= Copy_u8Pin )
		{
			switch ( Copy_u8Port )
			{
				case DIO_u8PORTA : *(Copy_pu8Value) = GET_BIT( DIO_PINA_REG , Copy_u8Pin ); break;
 2cc:	08 95       	ret
				case DIO_u8PORTB : *(Copy_pu8Value) = GET_BIT( DIO_PINB_REG , Copy_u8Pin ); break;
 2ce:	86 b3       	in	r24, 0x16	; 22
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	02 c0       	rjmp	.+4      	; 0x2d8 <DIO_u8GetPinVaIue+0x36>
 2d4:	95 95       	asr	r25
 2d6:	87 95       	ror	r24
 2d8:	6a 95       	dec	r22
 2da:	e2 f7       	brpl	.-8      	; 0x2d4 <DIO_u8GetPinVaIue+0x32>
 2dc:	81 70       	andi	r24, 0x01	; 1
 2de:	fa 01       	movw	r30, r20
 2e0:	80 83       	st	Z, r24
	return Local_u8ErrorState ;
}

u8 DIO_u8GetPinVaIue (u8 Copy_u8Port,u8 Copy_u8Pin, u8 *Copy_pu8Value )
{
	u8 Local_u8ErrorState = OK ;
 2e2:	80 e0       	ldi	r24, 0x00	; 0
		if( DIO_u8PIN7 >= Copy_u8Pin )
		{
			switch ( Copy_u8Port )
			{
				case DIO_u8PORTA : *(Copy_pu8Value) = GET_BIT( DIO_PINA_REG , Copy_u8Pin ); break;
				case DIO_u8PORTB : *(Copy_pu8Value) = GET_BIT( DIO_PINB_REG , Copy_u8Pin ); break;
 2e4:	08 95       	ret
				case DIO_u8PORTC : *(Copy_pu8Value) = GET_BIT( DIO_PINC_REG , Copy_u8Pin ); break;
 2e6:	83 b3       	in	r24, 0x13	; 19
 2e8:	90 e0       	ldi	r25, 0x00	; 0
 2ea:	02 c0       	rjmp	.+4      	; 0x2f0 <DIO_u8GetPinVaIue+0x4e>
 2ec:	95 95       	asr	r25
 2ee:	87 95       	ror	r24
 2f0:	6a 95       	dec	r22
 2f2:	e2 f7       	brpl	.-8      	; 0x2ec <DIO_u8GetPinVaIue+0x4a>
 2f4:	81 70       	andi	r24, 0x01	; 1
 2f6:	fa 01       	movw	r30, r20
 2f8:	80 83       	st	Z, r24
	return Local_u8ErrorState ;
}

u8 DIO_u8GetPinVaIue (u8 Copy_u8Port,u8 Copy_u8Pin, u8 *Copy_pu8Value )
{
	u8 Local_u8ErrorState = OK ;
 2fa:	80 e0       	ldi	r24, 0x00	; 0
		{
			switch ( Copy_u8Port )
			{
				case DIO_u8PORTA : *(Copy_pu8Value) = GET_BIT( DIO_PINA_REG , Copy_u8Pin ); break;
				case DIO_u8PORTB : *(Copy_pu8Value) = GET_BIT( DIO_PINB_REG , Copy_u8Pin ); break;
				case DIO_u8PORTC : *(Copy_pu8Value) = GET_BIT( DIO_PINC_REG , Copy_u8Pin ); break;
 2fc:	08 95       	ret
			Local_u8ErrorState = NOK ;
		}
	}
	else
	{
		Local_u8ErrorState = NOK ;
 2fe:	81 e0       	ldi	r24, 0x01	; 1
 300:	08 95       	ret
				default: Local_u8ErrorState = NOK ; break;
			}
		}
		else
		{
			Local_u8ErrorState = NOK ;
 302:	81 e0       	ldi	r24, 0x01	; 1
 304:	08 95       	ret
			{
				case DIO_u8PORTA : *(Copy_pu8Value) = GET_BIT( DIO_PINA_REG , Copy_u8Pin ); break;
				case DIO_u8PORTB : *(Copy_pu8Value) = GET_BIT( DIO_PINB_REG , Copy_u8Pin ); break;
				case DIO_u8PORTC : *(Copy_pu8Value) = GET_BIT( DIO_PINC_REG , Copy_u8Pin ); break;
				//case DIO_u8PORTD : *(Copy_pu8Value) = GET_BIT( DIO_PIND_REG , Copy_u8Pin ); break;
				default: Local_u8ErrorState = NOK ; break;
 306:	81 e0       	ldi	r24, 0x01	; 1
	{
		Local_u8ErrorState = NOK ;
	}
	
	return Local_u8ErrorState ;
}
 308:	08 95       	ret

0000030a <UART_init>:
 
void UART_init(void)
{
	
	// set buad rate = 9600
	UBRRL = 103;
 30a:	87 e6       	ldi	r24, 0x67	; 103
 30c:	89 b9       	out	0x09, r24	; 9
	
	
	//configure data bits = 8,configure no parity,configure stop bits = 1,selct UART MODE = Asynchronous,writing the UCSRC
	UCSRC = 0x86;
 30e:	86 e8       	ldi	r24, 0x86	; 134
 310:	80 bd       	out	0x20, r24	; 32
	CLR_BIT(UCSRB,2);
 312:	8a b1       	in	r24, 0x0a	; 10
 314:	8b 7f       	andi	r24, 0xFB	; 251
 316:	8a b9       	out	0x0a, r24	; 10
	
	//Enable Tx
	SET_BIT(UCSRB,3);
 318:	8a b1       	in	r24, 0x0a	; 10
 31a:	88 60       	ori	r24, 0x08	; 8
 31c:	8a b9       	out	0x0a, r24	; 10
	//Enable Rx
	SET_BIT(UCSRB,4);
 31e:	8a b1       	in	r24, 0x0a	; 10
 320:	80 61       	ori	r24, 0x10	; 16
 322:	8a b9       	out	0x0a, r24	; 10
	
	DIO_u8SetPinDirection( DIO_u8PORTD , DIO_u8PIN0 , DIO_u8PIN_INPUT );
 324:	40 e0       	ldi	r20, 0x00	; 0
 326:	60 e0       	ldi	r22, 0x00	; 0
 328:	83 e0       	ldi	r24, 0x03	; 3
 32a:	0e 94 41 00 	call	0x82	; 0x82 <DIO_u8SetPinDirection>
	DIO_u8SetPinDirection( DIO_u8PORTD , DIO_u8PIN1 , DIO_u8PIN_OUTPUT );
 32e:	41 e0       	ldi	r20, 0x01	; 1
 330:	61 e0       	ldi	r22, 0x01	; 1
 332:	83 e0       	ldi	r24, 0x03	; 3
 334:	0e 94 41 00 	call	0x82	; 0x82 <DIO_u8SetPinDirection>
 338:	08 95       	ret

0000033a <UART_TxChar>:
}


void UART_TxChar(u8 Copy_u8Data)
{
	UDR = Copy_u8Data;
 33a:	8c b9       	out	0x0c, r24	; 12
	while ( 0 == GET_BIT(UCSRA,5));
 33c:	5d 9b       	sbis	0x0b, 5	; 11
 33e:	fe cf       	rjmp	.-4      	; 0x33c <UART_TxChar+0x2>
}
 340:	08 95       	ret

00000342 <main>:
	
	


int main(void)
{
 342:	cf 93       	push	r28
 344:	df 93       	push	r29
 346:	00 d0       	rcall	.+0      	; 0x348 <main+0x6>
 348:	00 d0       	rcall	.+0      	; 0x34a <main+0x8>
 34a:	cd b7       	in	r28, 0x3d	; 61
 34c:	de b7       	in	r29, 0x3e	; 62
	 //     DECLERATION OF VARIABLES
	u8 sw1=0 , sw2=0 , sw3=.0 , MSTR_SW = 0 , Command  ;
 34e:	19 82       	std	Y+1, r1	; 0x01
 350:	1a 82       	std	Y+2, r1	; 0x02
 352:	1b 82       	std	Y+3, r1	; 0x03
 354:	1c 82       	std	Y+4, r1	; 0x04
	
	
	//     CALL FUNCTIONS   
	UART_init();
 356:	0e 94 85 01 	call	0x30a	; 0x30a <UART_init>
	
	//     SET DIRECTION OF PINS & PULL UP
	DIO_u8SetPinDirection( DIO_u8PORTA , DIO_u8PIN0 , DIO_u8PIN_INPUT);
 35a:	40 e0       	ldi	r20, 0x00	; 0
 35c:	60 e0       	ldi	r22, 0x00	; 0
 35e:	80 e0       	ldi	r24, 0x00	; 0
 360:	0e 94 41 00 	call	0x82	; 0x82 <DIO_u8SetPinDirection>
	DIO_u8SetPinDirection( DIO_u8PORTA , DIO_u8PIN1 , DIO_u8PIN_INPUT);
 364:	40 e0       	ldi	r20, 0x00	; 0
 366:	61 e0       	ldi	r22, 0x01	; 1
 368:	80 e0       	ldi	r24, 0x00	; 0
 36a:	0e 94 41 00 	call	0x82	; 0x82 <DIO_u8SetPinDirection>
	DIO_u8SetPinDirection( DIO_u8PORTA , DIO_u8PIN2 , DIO_u8PIN_INPUT);
 36e:	40 e0       	ldi	r20, 0x00	; 0
 370:	62 e0       	ldi	r22, 0x02	; 2
 372:	80 e0       	ldi	r24, 0x00	; 0
 374:	0e 94 41 00 	call	0x82	; 0x82 <DIO_u8SetPinDirection>
	
	// 	 DIRECTION OF MASTER SWITCH
 	DIO_u8SetPinDirection( DIO_u8PORTB , DIO_u8PIN7 , DIO_u8PIN_INPUT);
 378:	40 e0       	ldi	r20, 0x00	; 0
 37a:	67 e0       	ldi	r22, 0x07	; 7
 37c:	81 e0       	ldi	r24, 0x01	; 1
 37e:	0e 94 41 00 	call	0x82	; 0x82 <DIO_u8SetPinDirection>

	//   PULL UP 
	DIO_u8SetPinVa1ue( DIO_u8PORTA , DIO_u8PIN0 , DIO_u8PIN_HIGH);
 382:	41 e0       	ldi	r20, 0x01	; 1
 384:	60 e0       	ldi	r22, 0x00	; 0
 386:	80 e0       	ldi	r24, 0x00	; 0
 388:	0e 94 c9 00 	call	0x192	; 0x192 <DIO_u8SetPinVa1ue>
	DIO_u8SetPinVa1ue( DIO_u8PORTA , DIO_u8PIN1 , DIO_u8PIN_HIGH);
 38c:	41 e0       	ldi	r20, 0x01	; 1
 38e:	61 e0       	ldi	r22, 0x01	; 1
 390:	80 e0       	ldi	r24, 0x00	; 0
 392:	0e 94 c9 00 	call	0x192	; 0x192 <DIO_u8SetPinVa1ue>
	DIO_u8SetPinVa1ue( DIO_u8PORTA , DIO_u8PIN2 , DIO_u8PIN_HIGH);
 396:	41 e0       	ldi	r20, 0x01	; 1
 398:	62 e0       	ldi	r22, 0x02	; 2
 39a:	80 e0       	ldi	r24, 0x00	; 0
 39c:	0e 94 c9 00 	call	0x192	; 0x192 <DIO_u8SetPinVa1ue>
	DIO_u8SetPinVa1ue( DIO_u8PORTB , DIO_u8PIN7 , DIO_u8PIN_HIGH);
 3a0:	41 e0       	ldi	r20, 0x01	; 1
 3a2:	67 e0       	ldi	r22, 0x07	; 7
 3a4:	81 e0       	ldi	r24, 0x01	; 1
 3a6:	0e 94 c9 00 	call	0x192	; 0x192 <DIO_u8SetPinVa1ue>
    /* Replace with your application code */
    while (1) 
    {
  		Command = 0 ;
  		//       GET PINS 
  		DIO_u8GetPinVaIue( DIO_u8PORTA , DIO_u8PIN0 , &sw1);
 3aa:	ae 01       	movw	r20, r28
 3ac:	4f 5f       	subi	r20, 0xFF	; 255
 3ae:	5f 4f       	sbci	r21, 0xFF	; 255
 3b0:	60 e0       	ldi	r22, 0x00	; 0
 3b2:	80 e0       	ldi	r24, 0x00	; 0
 3b4:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_u8GetPinVaIue>
  		DIO_u8GetPinVaIue( DIO_u8PORTA , DIO_u8PIN1 , &sw2);
 3b8:	ae 01       	movw	r20, r28
 3ba:	4e 5f       	subi	r20, 0xFE	; 254
 3bc:	5f 4f       	sbci	r21, 0xFF	; 255
 3be:	61 e0       	ldi	r22, 0x01	; 1
 3c0:	80 e0       	ldi	r24, 0x00	; 0
 3c2:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_u8GetPinVaIue>
  		DIO_u8GetPinVaIue( DIO_u8PORTA , DIO_u8PIN2 , &sw3);
 3c6:	ae 01       	movw	r20, r28
 3c8:	4d 5f       	subi	r20, 0xFD	; 253
 3ca:	5f 4f       	sbci	r21, 0xFF	; 255
 3cc:	62 e0       	ldi	r22, 0x02	; 2
 3ce:	80 e0       	ldi	r24, 0x00	; 0
 3d0:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_u8GetPinVaIue>
		DIO_u8GetPinVaIue( DIO_u8PORTB , DIO_u8PIN7 , &MSTR_SW);
 3d4:	ae 01       	movw	r20, r28
 3d6:	4c 5f       	subi	r20, 0xFC	; 252
 3d8:	5f 4f       	sbci	r21, 0xFF	; 255
 3da:	67 e0       	ldi	r22, 0x07	; 7
 3dc:	81 e0       	ldi	r24, 0x01	; 1
 3de:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_u8GetPinVaIue>
		 
    		
    		//       CHANGE COMMAND TO TURN ON OR OFF LED OF ROOM 1
    		if ( 0 == sw1 )
 3e2:	89 81       	ldd	r24, Y+1	; 0x01
 3e4:	81 11       	cpse	r24, r1
 3e6:	02 c0       	rjmp	.+4      	; 0x3ec <main+0xaa>
    		{
  			  // pressed key
    			SET_BIT( Command , 0 );
 3e8:	81 e0       	ldi	r24, 0x01	; 1
 3ea:	01 c0       	rjmp	.+2      	; 0x3ee <main+0xac>
    		}else
    		{
    			CLR_BIT( Command , 0 );
 3ec:	80 e0       	ldi	r24, 0x00	; 0
    		}
    		
    		//       CHANGE COMMAND TO TURN ON OR OFF LED OF ROOM 2
    		if ( 0 == sw2 )
 3ee:	9a 81       	ldd	r25, Y+2	; 0x02
 3f0:	91 11       	cpse	r25, r1
 3f2:	02 c0       	rjmp	.+4      	; 0x3f8 <main+0xb6>
    		{
  			  // pressed key
    			SET_BIT( Command , 1 );
 3f4:	82 60       	ori	r24, 0x02	; 2
 3f6:	01 c0       	rjmp	.+2      	; 0x3fa <main+0xb8>
    		}else
    		{
    			CLR_BIT( Command , 1 );
 3f8:	8d 7f       	andi	r24, 0xFD	; 253
    		}
    		
    		//       CHANGE COMMAND TO TURN ON OR OFF LED OF ROOM 3
    		if ( 0 == sw3 )
 3fa:	9b 81       	ldd	r25, Y+3	; 0x03
 3fc:	91 11       	cpse	r25, r1
 3fe:	02 c0       	rjmp	.+4      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
    		{
  			  // pressed key
    			SET_BIT( Command , 2 );
 400:	84 60       	ori	r24, 0x04	; 4
 402:	01 c0       	rjmp	.+2      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
    		}else
    		{
    			CLR_BIT( Command , 2 );
 404:	8b 7f       	andi	r24, 0xFB	; 251
    		}
			
			
			if ( 0 == MSTR_SW )
 406:	9c 81       	ldd	r25, Y+4	; 0x04
 408:	91 11       	cpse	r25, r1
 40a:	02 c0       	rjmp	.+4      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
			{
				// pressed key
				SET_BIT( Command , 7 );
 40c:	80 68       	ori	r24, 0x80	; 128
 40e:	01 c0       	rjmp	.+2      	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
			}else
			{
				CLR_BIT( Command , 7 );
 410:	8f 77       	andi	r24, 0x7F	; 127
			}
  		
  		UART_TxChar(Command);
 412:	0e 94 9d 01 	call	0x33a	; 0x33a <UART_TxChar>
     }
 416:	c9 cf       	rjmp	.-110    	; 0x3aa <main+0x68>

00000418 <_exit>:
 418:	f8 94       	cli

0000041a <__stop_program>:
 41a:	ff cf       	rjmp	.-2      	; 0x41a <__stop_program>
